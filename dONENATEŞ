<!DOCTYPE html>
<html lang="tr">
<head>
<meta charset="UTF-8">
<title>Dönen Ateş Efekti</title>
<style>
  body {
    margin: 0;
    overflow: hidden;
    background: black;
  }
  canvas {
    display: block;
  }
</style>
</head>
<body>
<canvas id="fireCanvas"></canvas>
<script>
const canvas = document.getElementById('fireCanvas');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let mouse = { x: canvas.width/2, y: canvas.height/2 };
let particles = [];

document.addEventListener('mousemove', (e) => {
  mouse.x = e.clientX;
  mouse.y = e.clientY;
});

class Particle {
  constructor(angle, radius) {
    this.angle = angle;
    this.radius = radius + Math.random() * 20; // farenin çevresinde dağılma
    this.size = Math.random() * 5 + 2;
    this.speed = 0.05 + Math.random() * 0.05;
    this.life = 50 + Math.random() * 30;
    this.color = `rgba(255, ${Math.floor(Math.random()*150 + 50)}, 0, 1)`;
  }
  update() {
    this.angle += this.speed;
    this.radius *= 0.97; // yavaşça küçülme
    this.x = mouse.x + Math.cos(this.angle) * this.radius;
    this.y = mouse.y + Math.sin(this.angle) * this.radius;
    this.size *= 0.96;
    this.life--;
  }
  draw() {
    ctx.fillStyle = this.color;
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.size, 0, Math.PI*2);
    ctx.fill();
  }
}

function handleParticles() {
  // Yeni parçacık ekle
  for (let i = 0; i < 3; i++) {
    particles.push(new Particle(Math.random() * Math.PI * 2, 20));
  }

  for (let i = 0; i < particles.length; i++) {
    particles[i].update();
    particles[i].draw();
    if (particles[i].size < 0.5 || particles[i].life <= 0) {
      particles.splice(i, 1);
      i--;
    }
  }
}

function animate() {
  ctx.fillStyle = 'rgba(0,0,0,0.1)';
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  handleParticles();
  requestAnimationFrame(animate);
}

animate();
</script>
</body>
</html>
